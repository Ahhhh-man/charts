# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- $controller := .Values.controller }}
{{- if $controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    {{ include "knative-serving.labels" . | nindent 4 }}
  annotations:
    {{ include "knative-serving.annotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
        app.kubernetes.io/component: controller
        {{ include "knative-serving.labels" . | nindent 8 }}
    spec:
      {{- with $controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with $controller.affinity }}
      affinity:
        {{- toYaml . | nindent 12 }}
      {{- else }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      {{- end }}
      {{- with $controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      serviceAccountName: {{ $controller.serviceAccount.name }}
      containers:
        - name: controller
          image: {{ template "knative-serving.controller.image" . }}
          imagePullPolicy: {{ $controller.image.pullPolicy }}
          {{- if or $controller.image.pullSecrets .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- include "knative-serving.imagePullSecrets" (dict "root" . "imagePullSecrets" $controller.image.pullSecrets) | nindent 8 }}
          {{- end }}
          {{- with $controller.resources }}
          resources:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: metrics
              containerPort: {{ $controller.containerPorts.metrics }}
            - name: profiling
              containerPort: {{ $controller.containerPorts.profiling }}
            - name: probes
              containerPort: {{ $controller.containerPorts.probes }}
          {{- with $controller.livenessProbe }}
          livenessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            periodSeconds: 5
            failureThreshold: 6
          {{- end }}
          {{- with $controller.readinessProbe }}
          readinessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }} 
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            periodSeconds: 5
            failureThreshold: 3
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: controller
    app.kubernetes.io/component: controller
    {{ include "knative-serving.labels" . | nindent 4 }}
  annotations:
    {{ include "knative-serving.annotations" . | nindent 4 }}
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: {{ $controller.containerPorts.metrics }}
    - name: http-profiling
      port: 8008
      targetPort: {{ $controller.containerPorts.profiling }}
  selector:
    app: controller
{{- end }}