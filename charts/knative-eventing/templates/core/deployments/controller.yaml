# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- $controller := .Values.controller }}
{{- if $controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: {{ .Release.Namespace }}
  labels:
    knative.dev/high-availability: "true"
    app.kubernetes.io/component: eventing-controller
    {{- include "knative-eventing.labels" . | nindent 4 }}
    bindings.knative.dev/exclude: "true"
  annotations:
    {{- include "knative-eventing.annotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
      labels:
        app: eventing-controller
        app.kubernetes.io/component: eventing-controller
        {{- include "knative-eventing.labels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: {{ $controller.serviceAccount.name }}
      enableServiceLinks: {{ $controller.enableServiceLinks }}
      containers:
        - name: eventing-controller
          terminationMessagePolicy: FallbackToLogsOnError
          image: {{ template "knative-eventing.controller.image" . }}
          imagePullPolicy: {{ $controller.image.pullPolicy }}
          {{- with $controller.resources }}
          resources:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          {{- end }}
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            # APIServerSource
            - name: APISERVER_RA_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:367d01a3e69ec08cd0e8f44b100cfb2a3a6de628a793c3b8d60fcb5ddca9229b
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
                  ##         Adapter settings
                  #          - name: K_LOGGING_CONFIG
                  #            value: ''
                  #          - name: K_LEADER_ELECTION_CONFIG
                  #            value: ''
                  #          - name: K_NO_SHUTDOWN_AFTER
                  #            value: ''
                  ##           Time in seconds the adapter will wait for the sink to respond. Default is no timeout
                  #          - name: K_SINK_TIMEOUT
                  #            value: ''
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          {{- with $controller.livenessProbe }}
          livenessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          {{- end }}
          {{- with $controller.readinessProbe }}
          readinessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ $controller.containerPorts.metrics }}
            - name: profiling
              containerPort: {{ $controller.containerPorts.profiling }}
            - name: probes
              containerPort: {{ $controller.containerPorts.probes }}
{{- end }}