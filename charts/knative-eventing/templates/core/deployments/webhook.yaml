# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- $webhook := .Values.webhook }}
{{- if $webhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-webhook
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: eventing-webhook
    {{- include "knative-eventing.labels" . | nindent 4 }}
    bindings.knative.dev/exclude: "true"
  annotations:
    {{- include "knative-eventing.annotations" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: eventing-webhook
      role: eventing-webhook
  template:
    metadata:
      labels:
        app: eventing-webhook
        role: eventing-webhook
        app.kubernetes.io/component: eventing-webhook
        {{- include "knative-eventing.labels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: {{ $webhook.serviceAccount.name }}
      enableServiceLinks: {{ $webhook.enableServiceLinks }}
      containers:
        - name: eventing-webhook
          terminationMessagePolicy: FallbackToLogsOnError
          image: {{ template "knative-eventing.webhook.image" . }}
          imagePullPolicy: {{ $webhook.image.pullPolicy }}
          {{- with $webhook.resources }}
          resources:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 200m
              memory: 200Mi
          {{- end }}
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: WEBHOOK_NAME
              value: eventing-webhook
            - name: WEBHOOK_PORT
              value: {{ $webhook.containerPorts.https | quote }}
              # SINK_BINDING_SELECTION_MODE specifies the NamespaceSelector and ObjectSelector
              # for the sinkbinding webhook.
              # If `inclusion` is selected, namespaces/objects labelled as `bindings.knative.dev/include:true`
              # will be considered by the sinkbinding webhook;
              # If `exclusion` is selected, namespaces/objects labelled as `bindings.knative.dev/exclude:true`
              # will NOT be considered by the sinkbinding webhook.
              # The default is `exclusion`.
            - name: SINK_BINDING_SELECTION_MODE
              value: "exclusion"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: https-webhook
              containerPort: {{ $webhook.containerPorts.https }}
            - name: metrics
              containerPort: {{ $webhook.containerPorts.metrics }}
            - name: profiling
              containerPort: {{ $webhook.containerPorts.profiling }}
          {{- with $webhook.readinessProbe }}
          readinessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          readinessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: https-webhook
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          {{- end }}
          {{- with $webhook.livenessProbe }}
          livenessProbe:
          {{- toYaml . | nindent 6 }}
          {{- else }}
          livenessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: https-webhook
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
            initialDelaySeconds: 120
          {{- end }}
      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: {{ $webhook.terminationGracePeriodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  name: eventing-webhook
  namespace: {{ .Release.Namespace }}
  labels:
    role: eventing-webhook
    app.kubernetes.io/component: eventing-webhook
    {{- include "knative-eventing.labels" . | nindent 4 }}
  annotations:
    {{- include "knative-eventing.annotations" . | nindent 4 }}
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: {{ $webhook.containerPorts.https }}
  selector:
    role: eventing-webhook
{{- end }}
