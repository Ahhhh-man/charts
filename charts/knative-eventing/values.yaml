# Copyright 2024 Ahhhh-man. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
##
global:
  imageRegistry: ""
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []

## @section Common parameters

## @param nameOverride String to override knative-eventing full name
##
nameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @section knative-eventing crds
crds:
  ## @param crds.install Install CRDs
  ##
  install: true

## @section knative-eventing configmaps

## Knative Eventing ConfigMaps
## https://knative.dev/docs/eventing/
##
config:
  ## TODO: Enable the following ConfigMaps to customize the default configuration
  ##
  ## @param config.default.brChannel default broker channel template spec
  ## @param config.default.broker default broker config
  ## @param config.default.channel.webhook default channel config
  ## @param config.default.ping default pingsource config
  # default:
  #   brChannel:
  #   broker:
  #   channel:
  #     webhook:
  #   ping:
  ## @param config.features feature flags for Knative Eventing
  features:
    # ALPHA feature: The kreference-group allows you to use the Group field in KReferences.
    # For more details: https://github.com/knative/eventing/issues/5086
    kreference-group: "disabled"
    # ALPHA feature: The delivery-retryafter allows you to use the RetryAfter field in DeliverySpec.
    # For more details: https://github.com/knative/eventing/issues/5811
    delivery-retryafter: "disabled"
    # BETA feature: The delivery-timeout allows you to use the Timeout field in DeliverySpec.
    # For more details: https://github.com/knative/eventing/issues/5148
    delivery-timeout: "enabled"
    # ALPHA feature: The kreference-mapping allows you to map kreference onto templated URI
    # For more details: https://github.com/knative/eventing/issues/5593
    kreference-mapping: "disabled"
    # BETA feature: The transport-encryption flag allows you to encrypt events in transit using the transport layer
    # security (TLS) protocol.
    # For more details: https://github.com/knative/eventing/issues/5957
    transport-encryption: "disabled"
    # ALPHA feature: The eventtype-auto-create flag allows automatic creation of Even Type instances based on Event's
    # type being processed.
    # For more details: https://github.com/knative/eventing/issues/6909
    eventtype-auto-create: "disabled"
    # ALPHA feature: The aauthentication-oidc flag allows you to use OIDC authentication for Eventing.
    # For more details: https://github.com/knative/eventing/issues/7174
    authentication-oidc: "disabled"
    # ALPHA feature: The default-authorization-mode flag allows you to change the default
    # authorization mode for resources that have no EventPolicy associated with them.
    #
    # This feature flag is only used when "authentication-oidc" is enabled.
    default-authorization-mode: "allow-same-namespace"
    # ALPHA feature: The cross-namespace-event-links flag allows you to use cross-namespace referencing for Eventing.
    # For more details: https://github.com/knative/eventing/issues/7739
    cross-namespace-event-links: "disabled"
    # ALPHA feature: The new-apiserversource-filters flag allows you to use the new `filters` field
    # in APIServerSource objects with its rich filtering capabilities.
    new-apiserversource-filters: "disabled"
  ## @param config.kreferenceMapping provide mappings from a Knative reference to a templated URI
  ## https://knative.dev/docs/eventing/features/kreference-mapping/
  kreferenceMapping: {}
  ## @param config.leaderElection leader election configuration for high-availability deployments
  ## https://knative.dev/docs/serving/config-ha/
  leaderElection: {}
  ## @param config.logging global logging configuration for Knative Eventing
  ## https://knative.dev/docs/serving/observability/logging/config-logging/
  logging:
    # Common configuration for all Knative codebase
    "zap-logger-config": |
      {
        "level": "info",
        "development": false,
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "ts",
          "levelKey": "level",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "msg",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }
    # Log level overrides
    # For all components changes are be picked up immediately.
    "loglevel.controller": "info"
    "loglevel.webhook": "info"
  ## @param config.observability global observability configuration
  ## https://knative.dev/docs/serving/observability/metrics/collecting-metrics/#set-up-the-collector
  observability: {}
  ## @param config.sugar produce or control eventing resources
  ## https://knative.dev/docs/eventing/sugar/
  sugar: {}
  ## @param config.tracing global tracing configuration for Knative Eventing
  ## e.g:
  ## tracing:
  ##   backend: zipkin
  ##   zipkin-endpoint: http://opentelemetry-collector:9411/api/v2/spans
  ##   debug: "false"
  ##   sampling-rate: "0.1"
  tracing: {}

## @section knative-eventing deployment

## Knative Eventing Controller
controller:
  ## @param controller.enabled Enable Eventing Controller container deployment
  ##
  enabled: true
  ## Knative Eventing Controller image
  ## @param controller.image.registry Controller image registry
  ## @param controller.image.repository Controller image repository
  ## @param controller.image.tag Controller image tag
  ## @param controller.image.digest Controller image digest
  ## @param controller.image.pullPolicy Controller image pull policy
  ## @param controller.image.pullSecrets Controller image pull secrets
  ##
  image:
    registry: gcr.io
    repository: knative-releases/knative.dev/eventing/cmd/controller
    tag: ""
    digest: sha256:ce51558f682c971060d42ca7d4c77500644c3729dc11b35e395fca9710b3bc50
    pullPolicy: IfNotPresent
    ## e.g.
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param controller.apiserverReceiveAdapter.image APIServerReceiveAdapter image
  ## @param controller.apiserverReceiveAdapter.image.registry APIServerReceiveAdapter image registry
  ## @param controller.apiserverReceiveAdapter.image.repository APIServerReceiveAdapter image repository
  ## @param controller.apiserverReceiveAdapter.image.tag APIServerReceiveAdapter image tag
  ## @param controller.apiserverReceiveAdapter.image.digest APIServerReceiveAdapter image digest
  ##
  apiserverReceiveAdapter:
    image:
      registry: gcr.io
      repository: knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter
      tag: ""
      digest: sha256:a3bff70afe19197888ca4fb199413cd5f50f764657e8c69471e4e2b0561ee836
  ## @param controller.containerPorts.metrics
  ## @param controller.containerPorts.profiling
  ## @param controller.containerPorts.probes
  ##
  containerPorts:
    metrics: 9090
    profiling: 8008
    probes: 8080
  ## @param controller.serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param controller.serviceAccount.name The name of the ServiceAccount to use. If not set and create is true, a name
  ## is generated using the fullname template
  ## @param controller.serviceAccount.annotations Annotations to add to the ServiceAccount Metadata
  ##
  serviceAccount:
    create: true
    name: eventing-controller
    annotations: {}
  ## @param controller.resources Set container requests and limits for different resources like CPU or memory
  ## (essential for production workloads)
  ## e.g:
  ## resources:
  ##   requests:
  ##     cpu: 100m
  ##     memory: 100Mi
  ##   limits:
  ##     cpu: 100m
  ##     memory: 100Mi
  ##
  resources: {}
  ## Eventing Controller containers' liveness probe
  ## @param controller.livenessProbe Set the liveness probe for the Controller container
  ## e.g:
  ## livenessProbe:
  ##   httpGet:
  ##     path: /health
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  livenessProbe: {}
  ## Eventing Controller containers' readiness probe
  ## @param controller.readinessProbe Set the readiness probe for the Controller container
  ## e.g:
  ## readinessProbe:
  ##   httpGet:
  ##     path: /readiness
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  readinessProbe: {}
  ## @param controller.affinity Affinity for Eventing Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## @param controller.nodeSelector Node labels for Eventing Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param controller.tolerations Tolerations for Eventing Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param controller.enableServiceLinks Whether information about services should be injected into pod's environment
  ## variable. The environment variables injected by service links are not used, but can lead to slow boot times or slow
  ## running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: false

## Knative Eventing Job Sink
jobsink:
  ## @param jobsink.enabled Enable eventing Job Sink container deployment
  ##
  enabled: true
  ## Knative Eventing Job Sink image
  ## @param jobsink.image.registry Job Sink image registry
  ## @param jobsink.image.repository Job Sink image repository
  ## @param jobsink.image.tag Job Sink image tag
  ## @param jobsink.image.digest Job Sink image digest
  ## @param jobsink.image.pullPolicy Job Sink image pull policy
  ## @param jobsink.image.pullSecrets Job Sink image pull secrets
  ##
  image:
    registry: gcr.io
    repository: knative-releases/knative.dev/eventing/cmd/jobsink
    tag: ""
    digest: sha256:db31f3058da6d13dfa0294877a3a6a45c75ea2ee41d6b4c2f7ac4eb52e419804
    pullPolicy: IfNotPresent
    ## e.g.
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param jobsink.containerPorts.http
  ## @param jobsink.containerPorts.https
  ## @param jobsink.containerPorts.metrics
  ##
  containerPorts:
    http: 8080
    https: 8443
    metrics: 9092
  ## @param jobsink.serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param jobsink.serviceAccount.name The name of the ServiceAccount to use. If not set and create is true, a name is
  ## generated using the fullname template
  ## @param jobsink.serviceAccount.annotations Annotations to add to the ServiceAccount Metadata
  ##
  serviceAccount:
    create: true
    name: job-sink
    annotations: {}
  ## @param jobsink.resources Set container requests and limits for different resources like CPU or memory (essential
  ## for production workloads)
  ## e.g:
  ##  resources:
  ##   requests:
  ##     cpu: 125m
  ##     memory: 64Mi
  ##   limits:
  ##      cpu: 1000m
  ##      memory: 2048Mi
  ##
  resources: {}
  ## Eventing Job Sink containers' liveness probe
  ## @param jobsink.livenessProbe Set the liveness probe for the Job Sink container
  ## e.g:
  ## livenessProbe:
  ##   httpGet:
  ##     path: /health
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  livenessProbe: {}
  ## Eventing jobsink containers' readiness probe
  ## @param jobsink.readinessProbe Set the readiness probe for the Job Sink container
  ## e.g:
  ## readinessProbe:
  ##   httpGet:
  ##     path: /readiness
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  readinessProbe: {}
  ## @param jobsink.affinity Affinity for Job Sink pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## @param jobsink.nodeSelector Node labels for Job Sink pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param jobsink.tolerations Tolerations for Job Sink pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param jobsink.enableServiceLinks Whether information about services should be injected into pod's environment
  ## variable. The environment variables injected by service links are not used, but can lead to slow boot times or slow
  ## running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: false

## Knative Eventing Ping Source MT Adapter
mtping:
  ## @param mtping.enabled Enable Ping Source MT Adapter container deployment
  ##
  enabled: true
  ## Knative Eventing Ping Source MT Adapter image
  ## @param mtping.imagse.registry Ping Source MT Adapter image registry
  ## @param mtping.image.repository Ping Source MT Adapter image repository
  ## @param mtping.image.tag Ping Source MT Adapter image tag
  ## @param mtping.image.digest Ping Source MT Adapter image digest
  ## @param mtping.image.pullPolicy Ping Source MT Adapter image pull policy
  ## @param mtping.image.pullSecrets Ping Source MT Adapter image pull secrets
  ##
  image:
    registry: gcr.io
    repository: knative-releases/knative.dev/eventing/cmd/mtping
    tag: ""
    digest: sha256:adaf68a6923c7ef64e4cd8d0a08b7ff0ecaa9b99bdc73b4f944c1c0643c03ee2
    pullPolicy: IfNotPresent
    ## e.g.
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param mtping.containerPorts.metrics
  ##
  containerPorts:
    metrics: 9090
    probes: 8080
  ## @param mtping.serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param mtping.serviceAccount.name The name of the ServiceAccount to use. If not set and create is true, a name is
  ## generated using the fullname template
  ## @param mtping.serviceAccount.annotations Annotations to add to the ServiceAccount Metadata
  ##
  serviceAccount:
    create: true
    name: pingsource-mt-adapter
    annotations: {}
  ## @param mtping.resources Set container requests and limits for different resources like CPU or memory (essential for
  ## production workloads)
  ## e.g:
  ##  resources:
  ##   requests:
  ##     cpu: 125m
  ##     memory: 64Mi
  ##   limits:
  ##      cpu: 1000m
  ##      memory: 2048Mi
  ##
  resources: {}
  ## @param mtping.affinity Affinity for Ping Source MT Adapter pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## @param mtping.nodeSelector Node labels for Ping Source MT Adapter pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param mtping.tolerations Tolerations for Ping Source MT Adapter pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param mtping.enableServiceLinks Whether information about services should be injected into pod's environment
  ## variable. The environment variables injected by service links are not used, but can lead to slow boot times or slow
  ## running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: false

## Knative Eventing Webhook
webhook:
  ## @param webhook.enabled Enable eventing webhook container deployment
  ##
  enabled: true
  ## Knative Eventing Webhook image
  ## @param webhook.image.registry Eventing Webhook image registry
  ## @param webhook.image.repository Eventing Webhook image repository
  ## @param webhook.image.tag Eventing Webhook image tag
  ## @param webhook.image.digest Eventing Webhook image digest
  ## @param webhook.image.pullPolicy Eventing Webhook image pull policy
  ## @param webhook.image.pullSecrets Eventing Webhook image pull secrets
  ##
  image:
    registry: gcr.io
    repository: knative-releases/knative.dev/eventing/cmd/webhook
    tag: ""
    digest: sha256:29b4ea133bd78d1e89179ced50c58f86291c14ea40661af2e2e888bb551e3967
    pullPolicy: IfNotPresent
    ## e.g.
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param webhook.containerPorts.https
  ## @param webhook.containerPorts.metrics
  ## @param webhook.containerPorts.profiling
  ##
  containerPorts:
    https: 8443
    metrics: 9090
    profiling: 8008
  ## @param webhook.serviceAccount.create Specifies whether a ServiceAccount should be created
  ## @param webhook.serviceAccount.name The name of the ServiceAccount to use. If not set and create is true, a name is
  ## generated using the fullname template
  ## @param webhook.serviceAccount.annotations Annotations to add to the ServiceAccount Metadata
  ##
  serviceAccount:
    create: true
    name: eventing-webhook
    annotations: {}
  ## @param webhook.resources Set container requests and limits for different resources like CPU or memory (essential
  ## for production workloads)
  ## e.g:
  ##  resources:
  ##   requests:
  ##     cpu: 125m
  ##     memory: 64Mi
  ##   limits:
  ##      cpu: 1000m
  ##      memory: 2048Mi
  ##
  resources: {}
  ## Eventing Webhook containers' liveness probe
  ## @param webhook.livenessProbe Set the liveness probe for the Webhook container
  ## e.g:
  ## livenessProbe:
  ##   httpGet:
  ##     path: /health
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  livenessProbe: {}
  ## Eventing Webhook containers' readiness probe
  ## @param webhook.readinessProbe Set the readiness probe for the Webhook container
  ## e.g:
  ## readinessProbe:
  ##   httpGet:
  ##     path: /readiness
  ##     port: probes
  ##     scheme: HTTP
  ##   initialDelaySeconds: 20
  ##   periodSeconds: 10
  ##   timeoutSeconds: 5
  ##
  readinessProbe: {}
  ## @param webhook.affinity Affinity for Eventing Webhook pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## @param webhook.nodeSelector Node labels for Eventing Webhook pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param webhook.tolerations Tolerations for Eventing Webhook pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param webhook.enableServiceLinks Whether information about services should be injected into pod's environment
  ## variable. The environment variables injected by service links are not used, but can lead to slow boot times or slow
  ## running of the scripts when there are many services in the current namespace.
  ## If you experience slow pod startups or slow running of the scripts you probably want to set this to `false`.
  ##
  enableServiceLinks: false
  ## @param webhook.terminationGracePeriodSeconds The period of time in seconds after the webhook container receives a
  ## termination signal before the container should be terminated
  ##
  terminationGracePeriodSeconds: 300
